% Base case: the permutation of an empty list is an empty list.
permutation([], []).

% Recursive case: pick an element X from L, remove it, and find the permutation of the remaining elements.
permutation(L, [X|P]) :-
    del(X, L, L1),
    permutation(L1, P).

% Helper predicate: remove the first occurrence of X from the list.
del(X, [X|T], T).  % Case where X is the head of the list.
del(X, [H|T], [H|R]) :-  % Case where X is not the head, recurse through the tail.
    del(X, T, R).
